name: Automacao da base de dados

on: #Quando vai ser disparado a cada mudanca de codigo, quando que eu quero que isso aconteca, temos que seguir a identacao-> ENTER + TAB e escrever 
  push: #push eh o procedimento de enviar arquivo para o repositorio
    branches: [ 'main' ] 
  schedule: # Marco um certo horario para mandar e o cron serve para estabelecer o horario crontab.guru
    - cron: '0 0 * * *' # aqui mostra que sera todo dia quando der 00:00 ele vai mandar


jobs: # Aqui vamos definir cada passo que queremos executar
  Auto: # Aqui eh o nome que vamos chamar para o job
    runs-on: ubuntu - 22.04 # vai ligar um computador com ubuntu - 22.04

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4 # Esta clonando o que tem dentro do repositorio

      - name: Instalar Python
        uses: actions/setup-python@v5 # Sempre procurar por actions/nome_do_bagulho para ver qual a versao mais recente e sempre estar utilizando ela
        with:
          python-version: '3.12'
      
      - name: Instalar Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.3 # lembrar de sempre pesquisar a versao mais recente tambem da biblioteca (poetry --version [no terminal])
        
      - name: Instalar pacotes Python
        run: poetry install --no-root # instalando as dependencias do projeto, lembrando que precisamos instalar usando poetry add "nome_biblioteca" de todas elas para criar as dependencias

      - name: Instalar Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: 1.7.32

      - name: Atualizacao de relatorio # aqui estamos falando para usar a versao disponivel do sistema do Python
        run:
          poetry config virtuallenvs.prefer-active-python true 
          poetry run quarto render Relatorio/relatorio.qmd
        
      - name: Commit & Push
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: Automacao de relatorio e dashboard

      